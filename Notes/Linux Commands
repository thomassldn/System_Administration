General Linux Commands
================================================================================================
#PS1="\@ :\w \$ "                                                                        (08:44 PM :~/Desktop/iOS Projects $)


Certificates
=================================================================================================
#openssl x509 -in <cert_name>.pem -text -noout                                          (view certificate in txt format) 
#openssl s_client -showcerts -cert /path/to/certificates/<cert>.pem -key /path/to/private/<key>.key -CAfile /path/to/certificates/<cert>.pem -connect domain_endpoint:<port>
                                                                Should see " Verify return code: 0 (ok)"
#openssl pkcs12 -in <yourfile.pfx> -clcerts -nokeys -out <certificate.crt>              (extract Cert)
#openssl pkcs12 -in <yourfile.pfx> -nocerts -out <keyfile-encrypted.key>                (extract key)
#opessl rsa -in <keyfile-encrypted.key> -out <otherfile>                                (remove password from key)
#openssl rsa -in <keyfile-encrypted.key> -out <keyfile-decrypted.key>                   (extract an unecrypted key -not safe)
#openssl rsa -in <keyfile-encrypted.key> -outform PEM -out <keyfile-encrypted-pem.key>  (convert private key to pem format)

DevOPS
==================================================================================================
#iostat                                               (CPU Utilization report, the Device Utilization report and the Network Filesystem report.)
#free -g                                              (display memory, in GB) 
#vmstat
#pstree                                               (output list of process in tree format)


File Management
==================================================================================================
#find /path/to/files/ -type f -name '*.txt' -mtime +30 -exec ls -trl {} \;                     (list/rm files older than x-days)
#find /path/to/files/ -type f -name '*.txt' -mtime +30 -exec mv {} /path/to/new/folder/ \;     (move files to new folder)
#find / -type f -name "*.zip" -size +1M
#locate                                     (find files by name)
#stat                 (display file or filesystem status)


Firewalld
==================================================================================================
#firewall-cmd --help                                                                      (a TON of info)
#firewall-cmd --stat                                                                      (check if firewalld is running) 
#firewall-cmd --zone=public --add-port=80/tcp --permanent                                 (open port using firewalld)
#firewall-cmd --reload                                                                    (reload firewall configuration)
#iptables-save | grep 80                                                                  (check if port was added to iptables rules)
#firewall-cmd --list-all                                                                  (view settings in default zone)
#firewall-cmd --list-services                                                             (view current firewalld settings)
#firewall-cmd --add-service=ssh --timeout 15m                                             (open ssh for 15 min)
#/usr/lib/firewalld/zones/                                                                (this is where predefined zones are store)
#/etc/firewalld/zones                                                                     (the above files are copied here after they are modified)
#/usr/lib/firewalld/services/ (/etc/firewalld/services/)                                  (example services)
#

Filesystem Management
=================================================================================================
#vgdisplay                                            (display vgs) 
#df -ah                                               (check disk space) 
#lvs -o +devices <device>                             (displays, LV,VG,Attr, LSize,..,.., Devices)
#df -Th                                               (check fileystem type)
#fdisk, gdisk, parted                                 (MBR, GPT, GPT)
#fdisk -l                                             (list system disks and identify new drives) 
#lsblk                                                (display block devices)
#vgconvert                                            (convert a volume group from LVM1 to LVM2 - see man page) 
#mount                                                (list format and mount options for each filesystem) 
#findmnt                                              (way better than mount command !!!!!) 

#pvcreate /dev/sda3                                   (prepare for use w/LVM
#vgcreate <vg_name> /dev/sda3                         (create a VG on the new PV)
#lvcreate -l 100%FREE -n <lv_name> <vg_name>          (create a logical volume) 
Or
#lvcreate -L 512M -n <lv_name> <vg_name>
#mkfs -t ext4 /dev/sda3/<vg_name>-<vol_name>          (create a filesystem) 
#mkdir <mount_point>                                  (create a mount point) 
#vi /etc/fstab                                        (set mount opts, mntpoint in this file-copy another already created filesystem)
#mount /dev/sda2 /<mount_point>
#vi /etc/fstab                                        (filesystems you want to mount at boot) 

#vgdisplay 

After you add disk space (of whatever size), run the following commands to extend VG's and LV's: 
# lsblk                                    (run an LSBLK command to identify the new disk ID (usually at very bottom of listing))
# vgextend vlm_vg /dev/sdab                (extend the volume group “qcprbackupvg” and specify the new disk ID “/dev/sdab”)
# lvextend –L +2G vlm_vg/bklv –r          (extend the logical volume to the maxium size, 408G in this case, anything higher you’ll get an error. Again, specify the VG/LV and make to use the “-r” switch to automatically resize the underlying file system (saves extra work too)
#lvreduce -L -512M -r /dev/sdab
# df –h                                    (to verify the new disk space has been added)
When you run the “LSBLK” command it will list every single disk with a “tree” structure on the left hand side. It will also show you what volume group belongs to which disk… The logical volume that is associated to that volume group will also be displayed.



Sometimes nfs mounts go stale due to network problems, use the following commands to unmount/mount

# mount -t nfs -o remount /mnt/nfs
# umount /mnt/nfs
# umount -f /mnt/nfs
# umount -l /mnt/nfs
# umount -lf /mnt/nfs


Networking
==================================================================================================
#ifconfig                                             (show network interface configuration)
#ip addr show
#nmap -sT -O localhost                                (Check what ports are listening on a network node) 
#netstat -tulpn | grep LISTEN                         (Check what ports are listening on a network node)
#netstat -ie                                          (view interfaces, Up)
#mtr                                                  (Route packages)
#traceroute                                           (Route packages)
#dig

Package Manager 
=================================================================================================
#rpm -q vsftpd                                         (verify a package is installed, in this case vsftpd)
#yum -y install 
#yum help 
#yum list installed                                    (list installed packages) 
#yum info vsftpd                                       (list info on a package) 
#yum search samba                                      (search package names) 
#yum grouplist
#yum update

OS
===================================================================================================
#uname -a                                              (check kernel version) 
#ps aux | grep process_name                            (check PID of a process) 

Scripts 
===================================================================================================
nohup bash recompileRoutines.bash &

Service Management 
===================================================================================================
#systemctl status httpd                                (check service status)
#service httpd status                                  (check service status - old versions) 

User Management 
====================================================================================================
#useradd                                              (add local user)
#userdel                                              (delete user) 
#passwd <user_name>                                   (change the password of a user - RHEL) 
#id  <user_name>
#groups <user_name>
#finger <user_name>
#getent passwd <user_name>                                             (fetches entries from Name Server Swithc)
#users                                                (shows the usernames of all users currently logged on the system) 
#who 
#w
#lslogins <user_name>                                 (display information about a user)                                         


View System Specs
================================================================================================
#lscpu                                                (CPU)
#cat /proc/cpuinfo                                    (CPU)
#free                                                 (Memory)
#cat /proc/meminfo                                    (Memory)
#df -h                                                (HDD) 
#fdisk -l                                             (HDD)
#uname --m                                            (Hardware Architecture, i386, x86_64) 
#lshw                                                 (Hardware Configuration)



